apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gitlab
  namespace: argocd
spec:
  project: default
  source:
    repoURL: http://charts.gitlab.io/
    targetRevision: "8.11.0"
    chart: gitlab
    helm:
      valuesObject:
        upgradeCheck:
          enabled: false
        global:
          appConfig:
            lfs:
              bucket: gitlab-lfs-storage-0094b7b5-f33b-42ae-a6e1-cd2796b2a37e
              connection:
                secret: lfs-connection
                key: connection
            artifacts:
              bucket: gitlab-artifacts-storage-b706611c-b90f-4154-b2f9-774ed5dc3f35
              connection:
                secret: artifacts-connection
                key: connection
            uploads:
              bucket: gitlab-uploads-storage-fa6097fc-b6bc-49b2-8e61-6c67b246a422
              connection:
                secret: uploads-connection
                key: connection
            packages:
              bucket: gitlab-packages-storage-8ae765ca-5add-4120-aa3e-062cd398891e
              connection:
                secret: package-connection
                key: connection
            terraformState:
              bucket: gitlab-terraform-state-7b7c3d36-13bf-4435-888d-dc3dd9e84561
              connection:
                secret: terraform-state-connection
                key: connection
            ciSecureFiles:
              bucket: gitlab-ci-secure-files-884fa565-3bc1-4f00-82af-18e0bc84d9af
              connection:
                secret: ci-secure-files-connection
                key: connection
          minio:
            enabled: false
          ingress:
            configureCertmanager: false
            class: nginx
            annotations:
              kubernetes.io/tls-acme: true
              cert-manager.io/cluster-issuer: letsencrypt-prod
          registry:
            bucket: gitlab-registry-07287f46-9603-4122-8dc4-345763c036b4
          hosts:
            domain: cluster.niveri.dev
            externalIP:
            gitlab:
              name: gitlab.cluster.niveri.dev
            registry:
              name: registry.cluster.niveri.dev
            smartcard:
              name: smartcard.cluster.niveri.dev
            kas:
              name: kas.cluster.niveri.dev
            pages:
              name: pages.cluster.niveri.dev
            ssh: gitlab.cluster.niveri.dev
        gitlab-runner:
          runners:
            config: |
              [[runners]]
                [runners.kubernetes]
                helper_image = "registry.gitlab.com/gitlab-org/gitlab-runner/gitlab-runner-helper:arm64-latest"
                image = "ubuntu:22.04"
        nginx-ingress:
          enabled: false
        certmanager:
          install: false
        prometheus:
          install: false
        gitlab:
          toolbox:
            enabled: false
          gitaly:
            persistence:
              storageClass: rook-cephfs-retain
              size: 50Gi
          webservice:
            ingress:
              tls:
                secretName: gitlab-tls
          kas:
            ingress:
              tls:
                secretName: kas-tls
        registry:
          storage:
            secret: registry-connection
            key: connection
            redirect:
              disable: true
          webservice:
            ingress:
              tls:
                secretName: registry-tls
        redis:
          master:
            persistence:
              storageClass: rook-cephfs-retain
              size: 5Gi
        postgresql:
          persistence:
            storageClass: rook-cephfs-retain
            size: 8Gi
  destination:
    server: https://kubernetes.default.svc
    namespace: gitlab
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      allowEmpty: true
      selfHeal: true
